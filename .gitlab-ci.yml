# Run tests
test:
  stage: test
  image: php:7.3-alpine
  variables:
    XDEBUG_MODE: coverage
  cache:
    paths:
      - vendor/
  before_script:
    # Install dependencies
    - apk update
    - apk add git php7-dev gcc g++ make abuild binutils icu-dev zlib-dev libzip-dev composer
    - docker-php-ext-install intl zip
    # Install & enable Xdebug for code coverage reports
    - pecl install xdebug
    - docker-php-ext-enable xdebug
    - composer install
  script:
    - vendor/bin/simple-phpunit --configuration phpunit.xml.dist --coverage-text --colors=never

pages:
  stage: deploy
  when: always
  only:
    - master
  allow_failure: true
  image: sphinxdoc/sphinx
  script:
    - sphinx-build -n -W --keep-going -b html doc public
  artifacts:
    paths:
      - public

deploy:
  stage: deploy
  image: curlimages/curl:latest
  variables:
    URL: "$CI_SERVER_PROTOCOL://$CI_SERVER_HOST:$CI_SERVER_PORT/api/v4/projects/$CI_PROJECT_ID/packages/composer?job_token=$CI_JOB_TOKEN"
  script:
    - version=$([[ -z "$CI_COMMIT_TAG" ]] && echo "branch=$CI_COMMIT_REF_NAME" || echo "tag=$CI_COMMIT_TAG")
    - insecure=$([ "$CI_SERVER_PROTOCOL" = "http" ] && echo "--insecure" || echo "")
    - response=$(curl -s -w "\n%{http_code}" $insecure --data $version $URL)
    - code=$(echo "$response" | tail -n 1)
    - body=$(echo "$response" | head -n 1)
    # Output state information - this fails the job if the server does not respond with OK
    - if [ $code -eq 201 ]; then
        echo "Package created - Code $code - $body";
      else
        echo "Could not create package - Code $code - $body";
        exit 1;
      fi

